AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'    
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetAPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1a'
      CidrBlock: '10.0.0.0/24'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'WebA Public'
  SubnetAPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1a'
      CidrBlock: '10.0.1.0/24'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'AppA Private'
  SubnetBPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1b'
      CidrBlock: '10.0.2.0/24'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'WebB Public'
  SubnetBPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1b'
      CidrBlock: '10.0.3.0/24'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'AppB Private'
  RouteTableAPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "WebA Public"
  RouteTableAPrivate:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "AppA Private"
  RouteTableBPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "WebB Public"
  RouteTableBPrivate:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: "AppB Private"
  RouteTableAssociationAPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAPublic
      RouteTableId: !Ref RouteTableAPublic
  RouteTableAssociationAPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAPrivate
      RouteTableId: !Ref RouteTableAPrivate
  RouteTableAssociationBPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBPublic
      RouteTableId: !Ref RouteTableBPublic
  RouteTableAssociationBPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBPrivate
      RouteTableId: !Ref RouteTableBPrivate
  RouteTablePublicAInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableAPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  RouteTablePublicBInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableBPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
Outputs:
  TemplateID:
    Description: 'VPC TemplateId'
    Value: 'vpc/vpc-2azs'
  StackName:
    Description: 'Dev Mit VPC'
    Value: !Sub '${AWS::StackName}'
  AZs:
    Description: 'AZs'
    Value: 2
    Export:
      Name: !Sub '${AWS::StackName}-AZs'
  VPC:
    Description: 'VPC'
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  SubnetsPublic:
    Description: 'Subnets Public'
    Value: !Join [',',[!Ref SubnetAPublic, !Ref SubnetBPublic]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPublic'
  SubnetsPrivate:
    Description: 'Subnets Private'
    Value: !Join [',',[!Ref SubnetAPrivate, !Ref SubnetBPrivate]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPrivate'

  
  

      